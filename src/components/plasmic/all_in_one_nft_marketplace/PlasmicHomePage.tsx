// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5vAoK7BmKbFSGEzykGZNyw
// Component: 9IlnaCKeVT7x

import * as React from "react";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Header from "../../Header"; // plasmic-import: Yvyy45WNSjzG/component
import { AntdAvatar } from "@plasmicpkgs/antd5/skinny/registerAvatar";
import { NFTCarousel } from "suinova-nft-builder/dist/index.js";
import { NFTCarouselBtnGroup } from "suinova-nft-builder/dist/index.js";
import { LeftArrowIcon } from "suinova-nft-builder/dist/index.js";
import { RightArrowIcon } from "suinova-nft-builder/dist/index.js";
import { NFTCarouselItem } from "suinova-nft-builder/dist/index.js";
import { Divider } from "@chakra-ui/react";
import { VideoPlayer } from "suinova-nft-builder/dist/index.js";
import { BackIcon } from "suinova-nft-builder/dist/index.js";
import { ForwardIcon } from "suinova-nft-builder/dist/index.js";
import { PlayIcon } from "suinova-nft-builder/dist/index.js";
import { StopIcon } from "suinova-nft-builder/dist/index.js";
import Footer from "../../Footer"; // plasmic-import: DetsMIlX5icM/component

import { useScreenVariants as useScreenVariantswy4R3RlEmIpX } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: WY4r3RlEMIpX/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: 66MC2d9B7YecVEphuUMtqF/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 5vAoK7BmKbFSGEzykGZNyw/projectcss
import sty from "./PlasmicHomePage.module.css"; // plasmic-import: 9IlnaCKeVT7x/css

import RocketLaunchSvgIcon from "./icons/PlasmicIcon__RocketLaunchSvg"; // plasmic-import: X0DzP-2wh0_f/icon

createPlasmicElementProxy;

export type PlasmicHomePage__VariantMembers = {};
export type PlasmicHomePage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomePage__VariantsArgs;
export const PlasmicHomePage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomePage__ArgsType = {};
type ArgPropType = keyof PlasmicHomePage__ArgsType;
export const PlasmicHomePage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomePage__OverridesType = {
  root?: Flex__<"div">;
  header?: Flex__<typeof Header>;
  button?: Flex__<"button">;
  svg?: Flex__<"svg">;
  img?: Flex__<typeof PlasmicImg__>;
  avatar?: Flex__<typeof AntdAvatar>;
  nftCarousel?: Flex__<typeof NFTCarousel>;
  carouselButtonGroup?: Flex__<typeof NFTCarouselBtnGroup>;
  leftArrowIcon?: Flex__<typeof LeftArrowIcon>;
  rightArrowIcon?: Flex__<typeof RightArrowIcon>;
  nftVideoPlayer?: Flex__<typeof VideoPlayer>;
  backIcon?: Flex__<typeof BackIcon>;
  forwardIcon?: Flex__<typeof ForwardIcon>;
  playIcon?: Flex__<typeof PlayIcon>;
  stopIcon?: Flex__<typeof StopIcon>;
  image?: Flex__<typeof PlasmicImg__>;
  image2?: Flex__<typeof PlasmicImg__>;
  image3?: Flex__<typeof PlasmicImg__>;
  footer?: Flex__<typeof Footer>;
};

export interface DefaultHomePageProps {
  className?: string;
}

const $$ = {};

function PlasmicHomePage__RenderFunc(props: {
  variants: PlasmicHomePage__VariantsArgs;
  args: PlasmicHomePage__ArgsType;
  overrides: PlasmicHomePage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantswy4R3RlEmIpX()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__oWN)}>
            <div className={classNames(projectcss.all, sty.freeBox__hXA6)}>
              <Header
                data-plasmic-name={"header"}
                data-plasmic-override={overrides.header}
                className={classNames("__wab_instance", sty.header)}
              />
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__ocHki)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__adWyv)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zi0OA
                  )}
                >
                  {"The leading marketplace on SUI blockchain"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1IHti
                  )}
                >
                  {
                    "Discover the most outstanding NFTs across various categories. Buy and sell to earn rewards"
                  }
                </div>
                <Stack__
                  as={"button"}
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.button,
                    sty.button
                  )}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToViewNftList"] = true
                      ? (() => {
                          const actionArgs = { destination: `/view-nft-list` };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              location.assign(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToViewNftList"] != null &&
                      typeof $steps["goToViewNftList"] === "object" &&
                      typeof $steps["goToViewNftList"].then === "function"
                    ) {
                      $steps["goToViewNftList"] = await $steps[
                        "goToViewNftList"
                      ];
                    }
                  }}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__b8QDy)}
                  >
                    <RocketLaunchSvgIcon
                      data-plasmic-name={"svg"}
                      data-plasmic-override={overrides.svg}
                      className={classNames(projectcss.all, sty.svg)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sR2Qw
                      )}
                    >
                      {"Browse NFTs"}
                    </div>
                  </div>
                </Stack__>
              </Stack__>
              <div className={classNames(projectcss.all, sty.freeBox__pYUa)}>
                <PlasmicImg__
                  data-plasmic-name={"img"}
                  data-plasmic-override={overrides.img}
                  alt={""}
                  className={classNames(sty.img)}
                  displayHeight={"420px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"400px"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={
                    "https://suinova.var-meta.com/static/img/nft-illustration.jpeg"
                  }
                />

                <section
                  className={classNames(projectcss.all, sty.section__kju42)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__m6JjE)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jf9Bq
                      )}
                    >
                      {"Magic Astronaut"}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__wWeKk)}
                    >
                      <AntdAvatar
                        data-plasmic-name={"avatar"}
                        data-plasmic-override={overrides.avatar}
                        className={classNames("__wab_instance", sty.avatar)}
                        letters={"AB"}
                        src={
                          "https://suinova.var-meta.com/static/img/avatar.png"
                        }
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__shmJj
                        )}
                      >
                        {"Bronan"}
                      </div>
                    </Stack__>
                  </div>
                </section>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__olUBx)}>
              <div className={classNames(projectcss.all, sty.freeBox__fqVUi)}>
                <div className={classNames(projectcss.all, sty.freeBox__ueWgO)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1JFdv
                    )}
                  >
                    {"Trending NFTs"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pgmmF
                    )}
                  >
                    {"Checkout our weekly updated trending NFTs"}
                  </div>
                  <NFTCarousel
                    data-plasmic-name={"nftCarousel"}
                    data-plasmic-override={overrides.nftCarousel}
                    carouselBtnGroup={
                      <NFTCarouselBtnGroup
                        data-plasmic-name={"carouselButtonGroup"}
                        data-plasmic-override={overrides.carouselButtonGroup}
                        className={classNames(
                          "__wab_instance",
                          sty.carouselButtonGroup
                        )}
                        leftBtnChildren={
                          <LeftArrowIcon
                            data-plasmic-name={"leftArrowIcon"}
                            data-plasmic-override={overrides.leftArrowIcon}
                            className={
                              "" +
                              " " +
                              classNames("__wab_instance", sty.leftArrowIcon)
                            }
                            iconColor={"#27273A"}
                          />
                        }
                        rightBtnChildren={
                          <RightArrowIcon
                            data-plasmic-name={"rightArrowIcon"}
                            data-plasmic-override={overrides.rightArrowIcon}
                            className={
                              "" +
                              " " +
                              classNames("__wab_instance", sty.rightArrowIcon)
                            }
                            iconColor={"#27273A"}
                          />
                        }
                      />
                    }
                    className={classNames("__wab_instance", sty.nftCarousel)}
                    slidesToShow={4}
                  >
                    <NFTCarouselItem
                      className={classNames(
                        "__wab_instance",
                        sty.nftCarouselItem___8Pl2Z
                      )}
                      id={1}
                      image={
                        "https://suinova.var-meta.com/static/img/astronaut.jpeg"
                      }
                      name={"Happy Robots"}
                      price={"50 SUI"}
                    />

                    <NFTCarouselItem
                      className={classNames(
                        "__wab_instance",
                        sty.nftCarouselItem___6Xgd2
                      )}
                      id={2}
                      image={
                        "https://suinova.var-meta.com/static/img/astronaut.jpeg"
                      }
                      name={"Magic Mushrooms"}
                      price={"50 SUI"}
                    />

                    <NFTCarouselItem
                      className={classNames(
                        "__wab_instance",
                        sty.nftCarouselItem___5RpQ
                      )}
                      id={3}
                      image={
                        "https://suinova.var-meta.com/static/img/astronaut.jpeg"
                      }
                      name={"Disco Machines"}
                      price={"50 SUI"}
                    />

                    <NFTCarouselItem
                      className={classNames(
                        "__wab_instance",
                        sty.nftCarouselItem__lfjLs
                      )}
                      id={4}
                      image={
                        "https://suinova.var-meta.com/static/img/astronaut.jpeg"
                      }
                      name={"Disco Machines"}
                      price={"50 SUI"}
                    />

                    <NFTCarouselItem
                      className={classNames(
                        "__wab_instance",
                        sty.nftCarouselItem___5MqJ
                      )}
                      id={5}
                      image={
                        "https://suinova.var-meta.com/static/img/astronaut.jpeg"
                      }
                      name={"Disco Machines"}
                      price={"50 SUI"}
                    />
                  </NFTCarousel>
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__qwZkg)}>
              <div className={classNames(projectcss.all, sty.freeBox__pZy6W)}>
                <Divider
                  className={classNames(
                    "__wab_instance",
                    sty.chakraUiDivider__qyE6Y
                  )}
                  variant={"solid"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yy1Ea
                  )}
                >
                  {"Introduce NFT marketplace"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xh7Ei
                  )}
                >
                  {"The best NFT marketplace on Sui Blockchain for everyone"}
                </div>
                <VideoPlayer
                  data-plasmic-name={"nftVideoPlayer"}
                  data-plasmic-override={overrides.nftVideoPlayer}
                  backwardIcon={
                    <BackIcon
                      data-plasmic-name={"backIcon"}
                      data-plasmic-override={overrides.backIcon}
                      className={classNames("__wab_instance", sty.backIcon)}
                    />
                  }
                  className={classNames("__wab_instance", sty.nftVideoPlayer)}
                  forwardIcon={
                    <ForwardIcon
                      data-plasmic-name={"forwardIcon"}
                      data-plasmic-override={overrides.forwardIcon}
                      className={
                        "" + " " + classNames("__wab_instance", sty.forwardIcon)
                      }
                    />
                  }
                  playIcon={
                    <PlayIcon
                      data-plasmic-name={"playIcon"}
                      data-plasmic-override={overrides.playIcon}
                      className={
                        "" + " " + classNames("__wab_instance", sty.playIcon)
                      }
                    />
                  }
                  stopIcon={
                    <StopIcon
                      data-plasmic-name={"stopIcon"}
                      data-plasmic-override={overrides.stopIcon}
                      className={
                        "" + " " + classNames("__wab_instance", sty.stopIcon)
                      }
                    />
                  }
                  thumbnail={
                    "https://suinova.var-meta.com/static/img/introduce-mkplace-thumb.png"
                  }
                  videoSrc={
                    "https://suinova.var-meta.com/static/videos/SUI_NFT_Marketplace_Intro.mp4"
                  }
                />

                <Divider
                  className={classNames(
                    "__wab_instance",
                    sty.chakraUiDivider__z3Uo6
                  )}
                />
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__wbKae)}>
              <div className={classNames(projectcss.all, sty.freeBox__stxVa)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__p4DhK
                  )}
                >
                  {"How it works"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kBeyR
                  )}
                >
                  {"Find out how to get started"}
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__hMmJy)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__aj5Sp)}
                  >
                    <section
                      className={classNames(projectcss.all, sty.section__rSsu4)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__qg3Vu
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__j7MRw
                          )}
                        >
                          <PlasmicImg__
                            data-plasmic-name={"image"}
                            data-plasmic-override={overrides.image}
                            alt={""}
                            aria-describedby={"image"}
                            aria-hidden={"false"}
                            aria-label={"image"}
                            aria-labelledby={"image"}
                            className={classNames(sty.image)}
                            displayHeight={"auto"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"250px"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={
                              "https://dev-suinova.s3.ap-southeast-1.amazonaws.com/3a13fadc1481b4bba469f346b5b4aead.png"
                            }
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__lcfrD
                          )}
                        >
                          {"Setup Your wallet"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ksU6
                          )}
                        >
                          {
                            "Set up your wallet of choice. Connect it to the market by clicking the wallet icon in the top right corner."
                          }
                        </div>
                      </div>
                    </section>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___53Bm)}
                  >
                    <section
                      className={classNames(projectcss.all, sty.section__peDpi)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__kszSd
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vpoCa
                          )}
                        >
                          <PlasmicImg__
                            data-plasmic-name={"image2"}
                            data-plasmic-override={overrides.image2}
                            alt={""}
                            aria-describedby={"image"}
                            aria-hidden={"false"}
                            aria-label={"image"}
                            aria-labelledby={"image"}
                            className={classNames(sty.image2)}
                            displayHeight={"auto"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"250px"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={
                              "https://dev-suinova.s3.ap-southeast-1.amazonaws.com/cb13e2335ee39562dc24d1d4efc9d625.png"
                            }
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gN9En
                          )}
                        >
                          {"Setup Your wallet"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mky0D
                          )}
                        >
                          {
                            "Set up your wallet of choice. Connect it to the market by clicking the wallet icon in the top right corner."
                          }
                        </div>
                      </div>
                    </section>
                  </div>
                  <section
                    className={classNames(projectcss.all, sty.section__q2Q1N)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ukg7L)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hSvEn
                        )}
                      >
                        <PlasmicImg__
                          data-plasmic-name={"image3"}
                          data-plasmic-override={overrides.image3}
                          alt={""}
                          aria-describedby={"image"}
                          aria-hidden={"false"}
                          aria-label={"image"}
                          aria-labelledby={"image"}
                          className={classNames(sty.image3)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"250px"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          loading={"lazy"}
                          src={
                            "https://dev-suinova.s3.ap-southeast-1.amazonaws.com/de664eeba8eae4d75fbba8c15a7d0a25.png"
                          }
                        />
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__n4YbZ
                        )}
                      >
                        {"Setup Your wallet"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hyfpC
                        )}
                      >
                        {
                          "Set up your wallet of choice. Connect it to the market by clicking the wallet icon in the top right corner."
                        }
                      </div>
                    </div>
                  </section>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__lT45K)}
                />
              </div>
            </div>
            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "button",
    "svg",
    "img",
    "avatar",
    "nftCarousel",
    "carouselButtonGroup",
    "leftArrowIcon",
    "rightArrowIcon",
    "nftVideoPlayer",
    "backIcon",
    "forwardIcon",
    "playIcon",
    "stopIcon",
    "image",
    "image2",
    "image3",
    "footer"
  ],
  header: ["header"],
  button: ["button", "svg"],
  svg: ["svg"],
  img: ["img"],
  avatar: ["avatar"],
  nftCarousel: [
    "nftCarousel",
    "carouselButtonGroup",
    "leftArrowIcon",
    "rightArrowIcon"
  ],
  carouselButtonGroup: [
    "carouselButtonGroup",
    "leftArrowIcon",
    "rightArrowIcon"
  ],
  leftArrowIcon: ["leftArrowIcon"],
  rightArrowIcon: ["rightArrowIcon"],
  nftVideoPlayer: [
    "nftVideoPlayer",
    "backIcon",
    "forwardIcon",
    "playIcon",
    "stopIcon"
  ],
  backIcon: ["backIcon"],
  forwardIcon: ["forwardIcon"],
  playIcon: ["playIcon"],
  stopIcon: ["stopIcon"],
  image: ["image"],
  image2: ["image2"],
  image3: ["image3"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  button: "button";
  svg: "svg";
  img: typeof PlasmicImg__;
  avatar: typeof AntdAvatar;
  nftCarousel: typeof NFTCarousel;
  carouselButtonGroup: typeof NFTCarouselBtnGroup;
  leftArrowIcon: typeof LeftArrowIcon;
  rightArrowIcon: typeof RightArrowIcon;
  nftVideoPlayer: typeof VideoPlayer;
  backIcon: typeof BackIcon;
  forwardIcon: typeof ForwardIcon;
  playIcon: typeof PlayIcon;
  stopIcon: typeof StopIcon;
  image: typeof PlasmicImg__;
  image2: typeof PlasmicImg__;
  image3: typeof PlasmicImg__;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomePage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomePage__VariantsArgs;
    args?: PlasmicHomePage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomePage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomePage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomePage__ArgProps,
          internalVariantPropNames: PlasmicHomePage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomePage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomePage";
  } else {
    func.displayName = `PlasmicHomePage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomePage = Object.assign(
  // Top-level PlasmicHomePage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    button: makeNodeComponent("button"),
    svg: makeNodeComponent("svg"),
    img: makeNodeComponent("img"),
    avatar: makeNodeComponent("avatar"),
    nftCarousel: makeNodeComponent("nftCarousel"),
    carouselButtonGroup: makeNodeComponent("carouselButtonGroup"),
    leftArrowIcon: makeNodeComponent("leftArrowIcon"),
    rightArrowIcon: makeNodeComponent("rightArrowIcon"),
    nftVideoPlayer: makeNodeComponent("nftVideoPlayer"),
    backIcon: makeNodeComponent("backIcon"),
    forwardIcon: makeNodeComponent("forwardIcon"),
    playIcon: makeNodeComponent("playIcon"),
    stopIcon: makeNodeComponent("stopIcon"),
    image: makeNodeComponent("image"),
    image2: makeNodeComponent("image2"),
    image3: makeNodeComponent("image3"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHomePage
    internalVariantProps: PlasmicHomePage__VariantProps,
    internalArgProps: PlasmicHomePage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomePage;
/* prettier-ignore-end */
